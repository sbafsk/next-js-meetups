{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\seba\\\\React\\\\React Complete Guide\\\\NEXT JS\\\\nextjs-meetup-app\\\\pages\\\\[meetupId]\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nexport default function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, _objectSpread({}, props.meetupData), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\nconst user = 'seba-mongo';\nconst pass = 'TFP83tHAbltQDC08';\nconst dbName = 'meetups';\nconst mongoUrl = `mongodb+srv://${user}:${pass}@cluster0.ntm1w.mongodb.net/${dbName}?retryWrites=true&w=majority`;\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(mongoUrl);\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(m => ({\n      params: {\n        meetupId: m._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(mongoUrl);\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: _objectSpread(_objectSpread({}, selectedMeetup), {}, {\n        id: selectedMeetup._id.toString()\n      })\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/seba/React/React Complete Guide/NEXT JS/nextjs-meetup-app/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupData","user","pass","dbName","mongoUrl","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","m","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,sBAAO,QAAC,YAAD,oBAAkBA,KAAK,CAACC,UAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED,MAAMC,IAAI,GAAG,YAAb;AACA,MAAMC,IAAI,GAAG,kBAAb;AACA,MAAMC,MAAM,GAAG,SAAf;AACA,MAAMC,QAAQ,GAAI,iBAAgBH,IAAK,IAAGC,IAAK,+BAA8BC,MAAO,8BAApF;AAEA,OAAO,eAAeE,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoBH,QAApB,CAArB;AACA,QAAMI,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,CAAD,KAAQ;AACzBC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,CAAC,CAACN,GAAF,CAAMS,QAAN;AAAZ;AADiB,KAAR,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoBH,QAApB,CAArB;AACA,QAAMI,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AACrDb,IAAAA,GAAG,EAAEjB,QAAQ,CAACyB,QAAD;AADwC,GAA1B,CAA7B;AAIAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,kCACLyB,cADK;AAERE,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB;AAFI;AADL;AADF,GAAP;AAQD","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nexport default function MeetupDetails(props) {\r\n  return <MeetupDetail {...props.meetupData} />;\r\n}\r\n\r\nconst user = 'seba-mongo';\r\nconst pass = 'TFP83tHAbltQDC08';\r\nconst dbName = 'meetups';\r\nconst mongoUrl = `mongodb+srv://${user}:${pass}@cluster0.ntm1w.mongodb.net/${dbName}?retryWrites=true&w=majority`;\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(mongoUrl);\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((m) => ({\r\n      params: { meetupId: m._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for a single meetup\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(mongoUrl);\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        ...selectedMeetup,\r\n        id: selectedMeetup._id.toString(),\r\n      },\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}