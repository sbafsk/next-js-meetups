{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\seba\\\\React\\\\React Complete Guide\\\\NEXT JS\\\\nextjs-meetup-app\\\\pages\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'title1',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/The_Old_Bridge%2C_Pontypridd.jpg/1024px-The_Old_Bridge%2C_Pontypridd.jpg',\n  address: 'abc 123',\n  desc: 'beatiful place'\n}, {\n  id: 'm2',\n  title: 'title2',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/The_Old_Bridge%2C_Pontypridd.jpg/1024px-The_Old_Bridge%2C_Pontypridd.jpg',\n  address: 'dfg 456',\n  desc: 'beatiful place'\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n} // // run on server after deployment\n// export async function getServerSideProps(context) {\n//   // use when need data from the request or data is uptading every second.\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from API or FS\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n// nextjs function, gets called first\n// backend code, executes during building process\n\n\nexport async function getStaticProps() {\n  // use to cache data and dont need to reload everytime pages refresh\n  // always return an object\n  // fetch data from api\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/seba/React/React Complete Guide/NEXT JS/nextjs-meetup-app/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","desc","HomePage","props","meetups","getStaticProps","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,KAAK,EACH,oIAJJ;AAKEC,EAAAA,OAAO,EAAE,SALX;AAMEC,EAAAA,IAAI,EAAE;AANR,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,KAAK,EACH,oIAJJ;AAKEC,EAAAA,OAAO,EAAE,SALX;AAMEC,EAAAA,IAAI,EAAE;AANR,CAToB,CAAtB;;AAmBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA;AACA;AAGA,SAAO;AACLF,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAER;AADJ,KADF;AAILU,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD;AAED,eAAeJ,QAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\nimport MeetupList from '../components/meetups/MeetupList';\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: 'm1',\r\n    title: 'title1',\r\n    image:\r\n      'https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/The_Old_Bridge%2C_Pontypridd.jpg/1024px-The_Old_Bridge%2C_Pontypridd.jpg',\r\n    address: 'abc 123',\r\n    desc: 'beatiful place',\r\n  },\r\n  {\r\n    id: 'm2',\r\n    title: 'title2',\r\n    image:\r\n      'https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/The_Old_Bridge%2C_Pontypridd.jpg/1024px-The_Old_Bridge%2C_Pontypridd.jpg',\r\n    address: 'dfg 456',\r\n    desc: 'beatiful place',\r\n  },\r\n];\r\n\r\nfunction HomePage(props) {\r\n  return <MeetupList meetups={props.meetups} />;\r\n}\r\n\r\n// // run on server after deployment\r\n// export async function getServerSideProps(context) {\r\n//   // use when need data from the request or data is uptading every second.\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n\r\n//   // fetch data from API or FS\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS,\r\n//     },\r\n//   };\r\n// }\r\n\r\n// nextjs function, gets called first\r\n// backend code, executes during building process\r\nexport async function getStaticProps() {\r\n  // use to cache data and dont need to reload everytime pages refresh\r\n  // always return an object\r\n  // fetch data from api\r\n  \r\n\r\n  return {\r\n    props: {\r\n      meetups: DUMMY_MEETUPS,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}